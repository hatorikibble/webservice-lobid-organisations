<?xml version="1.0" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title></title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rev="made" href="mailto:peter@freeside.(none)" />
</head>

<body>



<ul id="index">
  <li><a href="#NAME">NAME</a></li>
  <li><a href="#SYNOPSIS">SYNOPSIS</a></li>
  <li><a href="#METHODS">METHODS</a></li>
  <li><a href="#ATTRIBUTES">ATTRIBUTES</a></li>
  <li><a href="#DEPENDENCIES">DEPENDENCIES</a></li>
  <li><a href="#LOGGING">LOGGING</a></li>
  <li><a href="#AUTHOR">AUTHOR</a></li>
  <li><a href="#REPOSITORY">REPOSITORY</a></li>
  <li><a href="#LICENCE-AND-COPYRIGHT">LICENCE AND COPYRIGHT</a></li>
</ul>



<a href="https://travis-ci.org/hatorikibble/webservice-lobid-organisations"><img src="https://travis-ci.org/hatorikibble/webservice-lobid-organisations.svg?branch=master"></a>

<h1 id="NAME">NAME</h1>

<p>WebService::Lobid::Organisation - interface to the lobid-Organisations API</p>

<h1 id="SYNOPSIS">SYNOPSIS</h1>

<pre><code> my $Library = WebService::Lobid::Organisation-&gt;new(isil=&gt; &#39;DE-380&#39;);
 
 printf(&quot;This Library is called &#39;%s&#39;, its homepage is at &#39;%s&#39; 
         and it can be found at %f/%f&quot;,
     $Library-&gt;name, $Library-&gt;url, $Library-&gt;lat, $Library-&gt;long);
 
 if ($Library-&gt;has_wikipedia){
  printf(&quot;%s has its own wikipedia entry: %s&quot;,
     $Library-&gt;name, $Library-&gt;wikipedia);
 } 
 
 if ($Library-&gt;has_multiple_emails){
  print $Library-&gt;email-&gt;[0];
 }else{
  print $Library-&gt;email;</code></pre>

<h1 id="METHODS">METHODS</h1>

<dl>

<dt id="new-isil-isil">new(isil=&gt;$isil)</dt>
<dd>

<p>tries to fetch data for the organisation identified by the ISIL <code>$isil</code>. If an entry is found then the attribute <code>found</code> is set to <i>true</i></p>

</dd>
</dl>

<h1 id="ATTRIBUTES">ATTRIBUTES</h1>

<p>currently the following attributes are supported</p>

<ul>

<li><p><b>api_url</b></p>

<p>inherited from <a>WebService::Lobid</a>, default is <i>https://lobid.org/</i></p>

</li>
<li><p><b>api_status</b></p>

<p>inherited from <a>WebService::Lobid</a>, <i>ok</i> if <code>api_url</code> reachable, otherwise <code>error</code></p>

</li>
<li><p><b>use_ssl</b></p>

<p>inherited from <a>WebService::Lobid</a>, <i>true</i> if <a>HTTP::Tiny</a> can use SSL, otherwise <code>false</code></p>

</li>
<li><p><b>found</b> (true|false)</p>

<p>indicates if an entry is found</p>

</li>
<li><p><b>isil</b></p>

<p>the <a href="https://en.wikipedia.org/wiki/International_Standard_Identifier_for_Libraries_and_Related_Organizations">ISIL</a> of the organisation. Has the predicate function <i>has_isil</i>.</p>

</li>
<li><p><b>name</b></p>

<p>Has the predicate function <i>has_name</i>.</p>

</li>
<li><p><b>url</b></p>

<p>Has the predicate function <i>has_url</i></p>

</li>
<li><p><b>provides</b></p>

<p>Service URL, normally the OPAC, Has the predicate function <i>has_provides</i></p>

</li>
<li><p><b>addressCountry</b></p>

<p>Has the predicate function <i>has_addressCountry</i></p>

</li>
<li><p><b>addressLocality</b></p>

<p>The city or town where institution resides. Has the predicate function <i>has_addressLocality</i></p>

</li>
<li><p><b>postalCode</b></p>

<p>Has the predicate function <i>has_postalCoda</i></p>

</li>
<li><p><b>streetAddress</b></p>

<p>Has the predicate function <i>has_streedAddress</i></p>

</li>
<li><p><b>email</b></p>

<p>Has the predicate function <i>has_email</i>. The email address for the instition including a <i>mailto:</i> prefix. A scalar if there ist just one email address, an array reference if there are more than one adresses (in this case <code>has_multiple_emails</code> is set to <i>1</i></p>

</li>
<li><p><b>has_multiple_emails</b></p>

<p>set to <i>1</i> if there is more than one address in <code>email</code></p>

</li>
<li><p><b>lon</b></p>

<p>The longitude of the place. Has the predicate function <i>has_lon</i>.</p>

</li>
<li><p><b>lat</b></p>

<p>The latitude of the place. Has the predicate function <i>has_</i></p>

</li>
</ul>

<h1 id="DEPENDENCIES">DEPENDENCIES</h1>

<p><a>HTTP::Tiny</a>, <a>JSON</a>, <a>Log::Any</a>, <a>Moo</a>, <a>Try::Tiny</a></p>

<h1 id="LOGGING">LOGGING</h1>

<p>This module uses the <a>Log::Any</a> Framework</p>

<h1 id="AUTHOR">AUTHOR</h1>

<p>Peter Mayr &lt;pmayr@cpan.org&gt;</p>

<h1 id="REPOSITORY">REPOSITORY</h1>

<p>The source code is also on GitHub &lt;https://github.com/hatorikibble/webservice-lobid-organisations&gt;. Pull requests and bug reports welcome!</p>

<h1 id="LICENCE-AND-COPYRIGHT">LICENCE AND COPYRIGHT</h1>

<p>GNU GPL V3</p>

<p>Peter Mayr 2016</p>


</body>

</html>


